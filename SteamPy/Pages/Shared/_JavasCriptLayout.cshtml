<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    <link href="/lib/element-ui/theme-chalk/index.css" rel="stylesheet" />
    <script src="/lib/vue/vue.js?v=2.0"></script>
    <script src="/lib/element-ui/index.js"></script>
    <script src="/lib/axios/axios.min.js"></script>
</head>
<body>
    @inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
    @functions {
        public string GetAntiXsrfRequestToken()
        {
            return Xsrf.GetAndStoreTokens(Model.HttpContext).RequestToken;
        }
        public string GetGetAntiXsrfRequestTokenName()
        {
            return Xsrf.GetAndStoreTokens(Model.HttpContext).HeaderName;
        }
    }
    <div>
        @Html.AntiForgeryToken()
        @RenderBody()
    </div>
    <script>

        var axiosrequerst = [];
        var loads = null;
        function showLoad() {
            loads = ELEMENT.Loading.service({
                lock: true,
                text: '努力加载中...',
            });
        }
        function hideLoad(requsturl) {
            var date = axiosrequerst.valueOf(requsturl)
            if (date != -1) {
                axiosrequerst.splice(date, 1);
            }
            if (axiosrequerst.length < 1) {
                loads.close();
            }
        }
        //注册访问前拦截
        axios.interceptors.request.use(
            function (config) {
                config.headers.@GetGetAntiXsrfRequestTokenName() = "@GetAntiXsrfRequestToken()";//document.getElementsByName("__RequestVerificationToken")[0].value;
                showLoad();
                axiosrequerst.push(config.url);
                //alert(config.url)
                return config;
            },
            function (error) {
                loads.close();
                hideLoad(null);
                return error;
            }
        );
        axios.defaults.timeout = 10000;
        axios.interceptors.response.use(
            function (response) {
                hideLoad(response.config.url);
                return response;
            },
            function (error) {
                loads.close();
                hideLoad("");
                return error;
            }
        );
    </script>
    @RenderSection("Scripts", required: false)
</body>
</html>
